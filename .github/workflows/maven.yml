# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Deploy Spring Boot app

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-env:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup env
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

  build-and-test:
    runs-on: ubuntu-latest
    needs:
      - setup-env
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build
        run: |
          mvn clean
          mvn -B package --file pom.xml

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-artifact
          path: target/demo-cicd.jar

  docker:
    runs-on: ubuntu-latest
    needs:
      - build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: project-artifact

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Meta
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/demo-cicd
          tags: |
            type=raw, value={{date 'YYYYMMDD'}}

      - name: Build and Push Docker
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}_${{ github.run_number }}